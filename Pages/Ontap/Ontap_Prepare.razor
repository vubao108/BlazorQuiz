@page "/ontap_prepare"
@inject IRepositoryOntap repository;
@inject AppState appState;
@inject NavigationManager navigation;


<div class="container">
    @*<div class="row">
        <div class="col-4 "/>
            <div class="col-4 ">
                <button class="btn btn-primary btn-block" @onclick="ontapClick">
                    Bắt đầu ôn tập
                </button>
            </div>
        </div>*@

    <div class="row">
       
        <div class="col-8 col-md-4">
           
            <SfDropDownList TValue="int" TItem="QuestionLevel" DataSource="@levels" @bind-Value="@CurrentLevelId"
                            @onselectionchange="GetSlectedQuestions">
                <DropDownListFieldSettings Value="Id" Text="Level"></DropDownListFieldSettings>
                <DropDownListEvents TItem="QuestionLevel" TValue="int" ValueChange="GetSlectedQuestions"></DropDownListEvents>

            </SfDropDownList>
        </div>
        <div class="col-4 col-md-2">
            <label>
                @SelectedQuestions câu

            </label>
        </div>
       
        @*<div class="col6">
            <h5>Số câu</h5>
            <Syncfusion.Blazor.Inputs.SfNumericTextBox @bind-Value="@numOfQuestion">

            </Syncfusion.Blazor.Inputs.SfNumericTextBox>

        </div>*@
    </div>
    <div class="row">
        <div class="col-4 col-md-2">
             <SfCheckBox Label="Quick Review" @bind-Checked="IsQuickReview"> 

               </SfCheckBox>
        </div>
         <div class="col-8 col-md-4">
              
            
                <button class="btn btn-primary btn-block" @onclick="ontapClick">
                    Bắt đầu ôn tập
                </button>
            
        </div>

    </div>
        <div class="row list-category">
            <div class="col-12">
                
                <SfListView DataSource="@Categories" ShowCheckBox="true" CssClass="e-list-template"
                            
                            >
                    <ListViewFieldSettings TValue="Category" Id="Id" Text="Name" IsChecked="IsSelected"
                                           
                                           >
                    </ListViewFieldSettings>
                    <ListViewEvents TValue="Category"
                        
                      >

                    </ListViewEvents>
                    <ListViewTemplates TValue="Category">
                        <Template>
                            @***REMOVED***
                                Category item = context as Category;
                                <div class="e-list-wrapper e-list-multi-line " @onclick="GetSlectedQuestions">

                                    <span class="e-list-item-header">@item.Name</span>
                                    <span class="e-list-content">
                                        Mới: @GetLevelCategoryNum(item, 4) ; <span style="background-color:yellow">Khó: @GetLevelCategoryNum(item, 3);</span>  Bình thường: @GetLevelCategoryNum(item, 2); Dễ: @GetLevelCategoryNum(item, 1); Tổng: @item.LevelStates.Sum(item => item.NumOfQuestion);

                                    </span>
                                </div>
                        ***REMOVED***
                        </Template>
                    </ListViewTemplates>

                </SfListView>
                    
            </div>



        </div>


    </div>

@code ***REMOVED***
    public int CurrentLevelId ***REMOVED*** get; set; ***REMOVED***
    public int numOfQuestion ***REMOVED*** get; set; ***REMOVED*** = 10000;
    public int SelectedQuestions ***REMOVED*** get; set; ***REMOVED***
    public bool IsQuickReview ***REMOVED*** get; set; ***REMOVED***


    List<QuestionLevel> levels = new List<QuestionLevel>()
    ***REMOVED***
        new QuestionLevel()***REMOVED*** Id = 0, Level="Tất cả mức độ"***REMOVED***,
        new QuestionLevel()***REMOVED*** Id = 4, Level="Mới (Chưa ôn lần nào)"***REMOVED***,
        new QuestionLevel()***REMOVED*** Id = 3, Level="Khó"***REMOVED***,
        new QuestionLevel()***REMOVED*** Id = 2, Level="Bình thường",***REMOVED***,
        new QuestionLevel()***REMOVED*** Id = 1, Level="Dễ"***REMOVED***

***REMOVED***;
    List<Category> Categories;

    [CascadingParameter] public IModalService Modal ***REMOVED*** get; set; ***REMOVED***

    protected override async Task OnInitializedAsync()
    ***REMOVED***
        Categories = await repository.LayDanhSachChuDeTheoNguoiDung(appState.CurrentIdentityUserId);
        await base.OnInitializedAsync();
***REMOVED***

    void ontapClick()
    ***REMOVED***
        Debug.WriteLine($"level = ***REMOVED***CurrentLevelId***REMOVED*** numOfQuestion =***REMOVED***numOfQuestion***REMOVED***");
        if (IsQuickReview)
        ***REMOVED***
            string tags = String.Join(",", Categories.Where(item => item.IsSelected).Select(item => item.Id).ToArray());
            navigation.NavigateTo($"ontap-nhanh/***REMOVED***CurrentLevelId***REMOVED***/***REMOVED***tags***REMOVED***/***REMOVED***numOfQuestion***REMOVED***");
    ***REMOVED***
        else
        ***REMOVED***
            
            string tags = String.Join(",", Categories.Where(item => item.IsSelected).Select(item => item.Id).ToArray());
            navigation.NavigateTo($"ontap/***REMOVED***CurrentLevelId***REMOVED***/***REMOVED***tags***REMOVED***/***REMOVED***numOfQuestion***REMOVED***");
    ***REMOVED***
***REMOVED***

    int GetLevelCategoryNum(Category category, int level_id)
    ***REMOVED***
        var item = category.LevelStates.FirstOrDefault(level_item => level_item.LevelId == level_id);
        return item != null ? item.NumOfQuestion : 0;
***REMOVED***
    void CategoryIsSelectedChanged(ClickEventArgs<Category> args) ***REMOVED***
        GetSlectedQuestions();
***REMOVED***

    void GetSlectedQuestions()
    ***REMOVED***
        if (Categories != null && Categories.Any(item => item.IsSelected))
        ***REMOVED***
              SelectedQuestions = Categories.Where(item => item.IsSelected).Sum(item => item.LevelStates.Where(item => CurrentLevelId == 0 || item.LevelId == CurrentLevelId)
                  .Sum(item => item.NumOfQuestion));
    ***REMOVED***
        else
        ***REMOVED***
             SelectedQuestions =  0;
    ***REMOVED***
***REMOVED***


***REMOVED***

<style>
    .flex ***REMOVED***
        display: flex;
***REMOVED***

    .flex__center ***REMOVED***
        justify-content: center;
***REMOVED***

    .vertical__center ***REMOVED***
        align-items: center;
***REMOVED***

    .vertical ***REMOVED***
        flex-direction: column;
***REMOVED***

    .flex__1 ***REMOVED***
        flex: 1;
***REMOVED***

    .flex__2 ***REMOVED***
        flex: 2;
***REMOVED***

    .flex__3 ***REMOVED***
        flex: 3;
***REMOVED***

    .flex__4 ***REMOVED***
        flex: 4;
***REMOVED***

    .bold ***REMOVED***
        font-weight: 500;
***REMOVED***

    .margin ***REMOVED***
        margin: 10px;
        width: 350px;
***REMOVED***

    .small__font ***REMOVED***
        font-size: 13px;
        margin: 2px 0;
***REMOVED***
    .list-category***REMOVED***
        max-height:80vh;
        overflow-y:auto;
***REMOVED***
</style>